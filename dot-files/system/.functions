###############################################
# More complex functions that we may want to use
###############################################


###############################################
# Tmux Convenience Wrappers
###############################################
attach()
{
    # Attaches to a given tmux session
    tmux attach-session -t "$@";
}

list()
{
    # Prints the current active tmux sessions
    tmux list-sessions;
}

###############################################
# SSH Setup 
###############################################
make_ssh_key()
{
    # Convenience function for generating an ssh key
    sh-keygen -t rsa -b 4096 -C "$(whoami):$(hostname)"
}

copy_ssh_key()
{
    # Copies the id_rsa.pub to the keyboard
    if [ "$OS" = "Mac" ]; then
        cat ~/.ssh/id_rsa.pub | pbcopy
    elif [ "$OS" = "Linux" ]; then
        notify-send "Copying ssh key via xclip";
        cat ~/.ssh/id_rsa.pub | xclip -selection c
    elif [ "$OS" = "Windows" ]; then
        cat ~/.ssh/id_rsa.pub | clip
    fi
} 

###############################################
# Test OS 
###############################################

###############################################
# Other 
###############################################
wiki()
{
    # Opens the Wikipedia Article of a given query
    raw="$@"
    query=${raw// /_};

    open -a safari https://wikipedia.org/wiki/"$query";
}

run_cmd() {
    # Runs a command given as a string. Prints whether or not the command succeeds
    # or fails
    $1
    if [ $? -eq 0 ]; then
        print_color "\nRunning $1 OK\n" ${GREEN}
    else
        print_color "\nRunning $1 FAIL\n" ${RED}
    fi
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
    tree -aC -I '.git|.gitmodules|venv' --dirsfirst "$@" | less -FRNX;
}
